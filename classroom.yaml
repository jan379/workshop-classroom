heat_template_version: pike 
#
# You can deploy this template using the following command:
# 'openstack stack create -t clustersetup.yaml -e clustersetup-env.yaml <stack_name>'
#
# If you prefer to just start a small testing stack, you can change the *-env.yaml file
# to 'openstack stack create -t clustersetup.yaml -e clustersetup-env-testing-small.yaml <stack_name>'
#

description: A template to deploy and configure a loadbalanced server setup.

parameters:
  number_student: 
    type: string
    default: 1
  public_network:
    type: string
    default: provider
  flavor_machinepark:
    type: string
    default: m1.micro
    constraints:
      - custom_constraint: nova.flavor
  image: 
    type: string
    constraints:
      - custom_constraint: glance.image
    default: Ubuntu 18.04 Bionic Beaver - Latest
  ssh_keys:
    type: comma_delimited_list
  dns_zone_id:
    type: string
  domainname:
    type: string

resources:

  innovo_net:
    type: OS::Neutron::Net
    properties: 
      name: innovo-net

  innovo_subnet:
    type: OS::Neutron::Subnet
    depends_on: [ innovo_net ]
    properties:
      name: innovo_subnet
      dns_nameservers:
        - 8.8.8.8
        - 8.8.4.4
      network: {get_resource: innovo_net}
      ip_version: 4
      cidr: 192.168.2.0/24
      allocation_pools:
      - {start: 192.168.2.10, end: 192.168.2.250}

  innovo_router:
    type: OS::Neutron::Router
    properties:
      external_gateway_info: {"network": { get_param: public_network }}

  router_subnet_connect:
    type: OS::Neutron::RouterInterface
    depends_on: [ innovo_router, innovo_subnet ]
    properties:
      router: { get_resource: innovo_router }
      subnet: { get_resource: innovo_subnet }

  ### student nodes as resource group ###
  #######################
  student_group:
    type: OS::Heat::ResourceGroup
    depends_on: [ router_subnet_connect ]
    properties:
      count: { get_param: number_student } 
      resource_def: 
        type: student.yaml
        properties:
          name: student%index%
          flavor: { get_param: flavor_machinepark }
          image: { get_param: image }
          innovo_net: { get_resource: innovo_net }
          ssh_keys: { get_param: ssh_keys }
          public_network: { get_param: public_network }
          dns_zone_id: { get_param: dns_zone_id }
          domainname: { get_param: domainname }


