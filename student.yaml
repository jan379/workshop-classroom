heat_template_version: 2016-04-08

parameters:
  name:
    type: string
  innovo_net:
    type: string
  image: 
    type: string
  flavor: 
    type: string
  ssh_keys:
    type: comma_delimited_list
  public_network:
    type: string

resources:

  allow_traffic:
    type: OS::Neutron::SecurityGroup
    properties:
      description: allow incoming traffic from anywhere. 
      name: allow incoming tcp and icmp traffic
      rules: 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, port_range_min: 1, port_range_max: 65535, protocol: tcp } 
        - { direction: ingress, remote_ip_prefix: 0.0.0.0/0, protocol: icmp } 


  server:
    type: OS::Nova::Server
    depends_on: [ server_port, cloud-init-config ]
    properties:
      name: { get_param: name }
      image: { get_param: image } 
      flavor: { get_param: flavor }
      user_data_format: RAW
      user_data: { get_resource: cloud-init-config }
      networks:
        - port: { get_resource: server_port }

  cloud-init-config:
   # cloud init demo resource
   type: OS::Heat::CloudConfig
   properties:
     cloud_config:
       users:
         -  name: innovo
            gecos:  Service user
            lock-passwd: false
            passwd: $6$JhWCAV93$rL7AGJ7qncM0jenW.It2TG.xJ0l3ZCBZATDwSb3I1PI5oBENq0JyHfzTZL2aRokBK.SANwy.BU.8d0wllXLMT. 
            sudo: ALL=(ALL) NOPASSWD:ALL
            shell: /bin/bash
            ssh-authorized-keys: { get_param: ssh_keys }
       runcmd:
         - [ /root/install_kubeadm.sh ]
       write_files:
         -  content: { get_file: scripts/install_kubeadm.sh }
            permissions: 0700
            path: /root/install_kubeadm.sh

  server_port:
    type: OS::Neutron::Port
    properties:
      name: server port
      network: { get_param: innovo_net}
      security_groups: 
        - { get_resource: allow_traffic }

  public_ip:
    type: OS::Neutron::FloatingIP
    depends_on: [ server_port ]
    properties:
      floating_network: { get_param: public_network }
      port_id: { get_resource: server_port }
      
outputs:
  instance_ip:
    description: IP address of the deployed compute instance
    value: { get_attr: [server, first_address] }
